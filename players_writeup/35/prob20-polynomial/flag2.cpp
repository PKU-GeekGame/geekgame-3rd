#include <iostream>
#include <algorithm>

int M[64] = {0x00000f49,0x00000121,0x31c44dff,0x09bbb244,
0x09cd2637,0x099e9344,0x3a1174d9,0x2982ce42,
0x202a3e59,0x3ad2f444,0x0655dac3,0x181ae6c1,
0x2ffcf1ee,0x0aae9419,0x2016e6f4,0x19cf9f98,
0x2dea04c3,0x089262f4,0x18327c16,0x373bd1d9,
0x0938e62a,0x36b7868b,0x3813bcfe,0x0d213f8d,
0x07e67f22,0x038fcd76,0x32a17a7e,0x2386ee67,
0x382d9fd7,0x2fa45664,0x04cfe37e,0x02af595c,
0x2103e392,0x1536b2ba,0x1c46d639,0x0b170deb,
0x2104ab3d,0x334666e4,0x0d52ffe1,0x144a6446,
0x242bcc46,0x37bf7317,0x03a97d9a,0x3b329d1a,
0x0724f983,0x1ed8a93e,0x25e09bb8,0x18121d9e,
0x2e301013,0x105e3542,0x375adf03,0x051674fe,
0x2ac2758e,0x352291e2,0x375d7604,0x338e6b2a,
0x0c8eb7eb,0x2f5350dc,0x20e81988,0x35f5c18e,
0x08753392,0x0cd0ace9,0x17df5455,0x1b91c2b0}; // 0x105020

int B[64] = {0x00000000,0x00000001,0x00000001,0x3656d65b,
0x00000001,0x163456b8,0x3656d65b,0x1d21561b,
0x00000001,0x375fe6c1,0x163456b8,0x257c787f,
0x3656d65b,0x16400573,0x1d21561b,0x2766e2ab,
0x00000001,0x1afd27ac,0x375fe6c1,0x27b55371,
0x163456b8,0x0a25e8c8,0x257c787f,0x337e65be,
0x3656d65b,0x24c90037,0x16400573,0x20677ed8,
0x1d21561b,0x267c5b5f,0x2766e2ab,0x3647fc39,
0x00000001,0x3700cccc,0x1afd27ac,0x00e5b307,
0x375fe6c1,0x131d28f6,0x27b55371,0x13477c50,
0x163456b8,0x0448ffec,0x0a25e8c8,0x16d34eaf,
0x257c787f,0x320e0843,0x337e65be,0x1132615e,
0x3656d65b,0x0647d7a5,0x24c90037,0x0ad6b6cd,
0x16400573,0x2aca743e,0x20677ed8,0x0498a9b2,
0x1d21561b,0x1cc06735,0x267c5b5f,0x17d4c6bf,
0x2766e2ab,0x06b059a5,0x3647fc39,0x172ca754}; // 0x405280

const int MOD = 998244353;

int qpow(int a, int b) {
	int r = 1;
	for(;b;b >>= 1) {
		if(b & 1) r = 1LL * a * r % MOD;
		a = 1LL * a * a % MOD;
	}
	return r;
}

int inv(int x) {
	return qpow(x, MOD - 2);
}

int main() {
	for(int i = 1;i < 64;i <<= 1) {
		for(int j = 0;j < 64;j += 2 * i) {
			for(int k = 0;k < i;k++) {
				int R = M[j + k], S = M[i + j + k];
				// (r,s) -> (r + s, (r - s) * q)
				S = 1LL * S * inv(B[i + k]) % MOD; // now S = r - s
				M[j + k] = 1LL * (R + S) * inv(2) % MOD;
				M[i + j + k] = 1LL * (R - S + MOD) * inv(2) % MOD;
			}
		}
	}
	for(int i = 0;i < 45;i++) {
		std::cout << char(M[i]);
	}
	std::cout << "\n";
	return 0;
}

// flag{yOU_kN0w_wH47_1S_f4$t_fOuRiEr_7r4n$F0RM}
