s = """327b9a4e4de457772135cd0bb93e18569bf89585f80578eedc379108be66f7a48502a7234a738c5ad6bc059043ea2f3662f35dac2e540289e6deaeec235b3e55c6ced48f117a9c9614f19bcd6687c0b2a139a9d664fe31cd45a736f667c27f427350d23d3d032dbe6fd534ddc8390a17541be193ef35dedf10900958cef87c7365ce6ca6598ce568ec41f903cc9bd483b7e25367fc20362441e619c404045c5e0aaff4b11c04ba59de9b3c28d4be77de30feca04e396fc9313a8c4b0dea834be17e23d46ed26d53452e140e69de595b7f83ecc5e55e27924cf4e14c6a62893c8fe9604086312c5ee05298ee3bc91459d828935f273ba72cb38f5ad939bc01d76bea0de2a626debdb78efe9169a27f24dc105f41c30039edc77aa7b0937855cb53d3e72e42cd6b2426689e8a9e9e9732625ab8187ec8fa85df365afa53d921d51f517cb1653bb8e955ce68d0d489da6a39006ea9e87518fd0f0f9c7451e370b7920ef2afdb599d3fd808547f4c22902d55e0b48eec9706e7722474d2d499afc99bdb052ad49a7108ec54099679bb43fa6038d446acd66a76c169f4a33d02c798dcf9a7025b62931ff502fedc5505edd0bc6b3836d8961792023a5922ee5affdfced99e2351d5bb52a79489eafc31a22263df468f994add100333dac0b2ae9442181607b39f1fa8b731455ec4c33d009b5ec6a80a6a34e6a8535af2f29f554d97c8d310f0225dff52e6a2a0c6e89cc308399aa2e4eae3bb4580ac329901ebd4b425879c7d33e2b86e03bbe1aeafa6aa91326f6e766d26dccf454bac6a3f34ef8d09829b3b3269021975c579c4dbcdf73d733c5cf747d7909cc465cc8700ee42c00937664ef764640d28738ffb94b2a1471fbc9f73f4975b41526d7189f875fdc951495f2e03820375cdf82e7a9ef40da0c23aa0b18c066c0d5a60dd0c3cb0fb49755bddf79722deba1a9632fa618d9cbeb88ef8e51cad339bd45297c6e630fac0afece85f60b1c95167d1d00f83f04b9e30fa017cb3d8346b0a061e0de76a409490ac58fd295e0973232daed3b87cb7d3297ff0bf93d0126f5036a6f1c2ae0965fde563f7a539341705cdb97908f142b91ac41da6cdc0bbb7550013f43abe3667eaed9acd748eaf86ebfc99bc60d141f00b086ce455ff3a94f5d23c752dd86e52842e7408cb9d62cb2af5962c2d32ccb6854445a2a64e9b3ebc3ca9bbecd9b550e856b1fb5ca6e03e9a26d0b9ccf4c1880def4ad95a1fa27426c5ed99d1c174025bd4919f5fc71f7a6cb6d0fd2f9528c4b2deb1dc1b2e799013be89270395ddd7a28f6b3eb63c8dbd0b5f01ac3ef6990ddf8ef6c7ee0fd97ee553fd26c77a391d1bfcf14736ef53d4084e0ae7d31bb5eb11576c645cb84b49292ebf7fd57f4882b02d01cace3db31b3702ca24e9829948bcc75a1dfad5af225d7da43a9f9246b79b9b469a9c3ce99eb5403742c98ce1efda262fcb88fbddf7a2c98f9cb6cf14b64a41987922eaea14254faae56bd707ac4c7cda366044eb0eabca11695e75ffeec22687b1c0eafd588af6fe86060bfc1ca93ddb9993883a1961da92b384ee65969bc410376ee87e9aefe81530c4353e308fb7054a1f4189afae929359abc3f0bc5940f3b300b9e27a2b642dae73f4fa4165cf88483525ed19a55782ac1df3fa2e352465a2ffac0d71e5135624dfa166fa807e483b78fd6e1f98d905e04ede6a5e9e0bdaef01254cc6fdb42e6ac036ef563b244ac2dec823c884b225da62dd942b43b13c96ebd593e3b24b7197717ef3a9761b373e70252a22fc3fd3383d5cd7eabf020871298c40916d2cefdda9c77c8b6b1dc506b972d681ca93c2cd2ddba02072f52bf7f7bb2861bc6efd746b375496cd157608fcdcc9e6245c3931218b4c754dbbdc6452341386cec8f11cfc16758dd8da0060420e32f12ecb0975977dced5ac534ffea2dcda16a864842e785713e2429167a49a86de5d527f98bfd7d4e18f018dc86deca694818395f3b5661d9a37121a5c412eb1937696366541f50d381af82da41bbf6555623f65f32cfd41642cbfd92aa9383e971bbfa250e9ca8a6059faf4cb5ecf46a51626f9e276862bdca30ce3f4eaa30bfa85cc62841ec662f700af4cd50265e2cb62720e3e614f7cc3905f811dba6c777b639c2eb4aaa12c56c0a2ea057777a6e9281f85f415328045bcf81aa033e9213f31d174dda0fa4039902c79641d3fcb7d2d429e56dc4ee440744e91aa1bf41edc62ce92f588af357fe2102fc7b648d61a2a752c6e3a0fa2316281db302382a5927de322849182ecf8a409a332420b42d679c29cc5adff6d4dff1325c2bd06f164fc099a7ffe41cf8ebeee3fb676ee05eb7ae81c12856265146c21123a801d9f23b22d7070c53be251733df7f4b8bb12b98356f6334de3d0c36d7d5ded3daa39cbe16c47f0458a9675472ba3920c6fd9b3d71ce9e7d75657f2ee053ad7843be2ed5aba9d53d69dd9e2413e9ebaef0589fb2a7c9a76f0edc7fe373ccc0b522822a55f0af30f94b8f377b9d026812c2ecaf0801d8b95888225e80692ec70f3b307fb801ec4c00344cebc1e6d6e0996fccd5563fa5727f3d92f38826ffb40e45dfbcfc44eb08514110bdae6ce346e7065f68286aa44e9323c679db54cc852967529b7c4ede0cbb7463e5c55e8ff646705f504abcf86e15cbeacbaf360e6e1e586d6890c15dcaf383994cd13442466007a4b9308bb94d378351298c45f6e8fcd87781892690b98954abf5b46949f64646e6443ab189e1812ab2dd08b3c46be33f0ccab6bfd251dda9ff9cbc01bc3c9d9eaedbeab6f581c076e59e50043226536983dad8930d7384f77e155a1522258d0a12a1fc09f34f385d8f209c2b8113f6a3bd49d14d25981548101d43998639efaec5de099693f22e47c7af693f28e6580df2c6850362e119b3b16b48da4f085ae37b324abf4b262763d543c83d0324e66c7e8e27f8fee42af6fd0f2ad6e328b89097b8fbfda240300cb1eb5278292f1e15229936fc0191d11cf925a1b4bf838ead384d71883c05ab0aa25ba34094441e589f461840295b0a4a78929ed56a4a5141ed1c2f9688a494056114988a1eb9a24dbb14425eee6e097c8e28b1441d1c5aa7982e937009ce98b739367b667ff8fd2d3c7e05b335ea5e94e0284acf16dbd3a87c00e67aabfb45ce373ecf875907ff2abc449e1b1e696c16f6f1ef56f2fc0e730728afa18771f549536100126f5cbb7ac7c42675de144620290a6179d47cb99b50bf7b53276c96076a67d3106629bfd9ffd5c56eb2dbc982660b73923d0f484e6b57112dd27b270d779ea27b114c3753780d6c542ecefbe40201db2f983b491ad68dde8e8e62bc7ca33f6eb4eef5003a39ef74fe7a6f0613304fbd97467ca883d92a19304ec9aadd1752fe6bbdc065c81d0d0e9b0d6d36da052bca69a96d8244ffc8ec20e495bc6147f35ac575b0a88bb8800a66e7f9a4d2072425c2d7e1f951e5b58416b1a6aa509c835becee6dfe6cd62d5a5d4ba0cb0d19314b55ea8e7c9440a5a3cb817cd7017802c7e76611ae66da825f8e1aa3c86c62acab4996553fee38"""
import random, time
from randcrack import RandCrack

def reverse(s: str):
    return s[6:8] + s[4:6] + s[2:4] + s[0:2]

rc = RandCrack()
for i in range(624):
    rc.submit(int(reverse(s[i * 8: (i + 1) * 8]), 16))
    # Could be filled with random.randint(0,4294967294) or random.randrange(0,4294967294)

for i in range(624, len(s) // 8):
    noise = ( int(reverse(s[i * 8: (i + 1) * 8]), 16) )
    predict = rc.predict_randrange(0, 4294967295)
    answer = noise ^ predict
    if answer != 0:
        print(answer.to_bytes(4, "little").decode(), end="")
    else:
        print(">>> 0 <<<")
